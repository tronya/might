{"version":3,"sources":["views/Intro/Intro.tsx","components/atoms/utils.tsx","components/atoms/MightInput.tsx","store/reducer/formReducer.ts","components/atoms/Button.tsx","views/stepper/stepperButtons/StepperButtons.tsx","models/stepper.enum.ts","views/stepper/steps/Rifle.tsx","views/stepper/stepItem/StepItem.tsx","views/stepper/steps/Ammunition.tsx","views/stepper/steps/Optics.tsx","views/stepper/Stepper.tsx","store/reducer/stepper.ts","store/reducer/tableReducer.ts","store/reducer/index.ts","views/table/Table.tsx","App.tsx","reportWebVitals.ts","theme.tsx","serviceWorker.js","index.tsx"],"names":["Intro","to","Button","variant","color","showErrorOnChange","meta","submitError","dirtySinceLastSubmit","error","touched","modified","MightInput","props","input","name","value","type","onChange","restInput","required","fullWidth","helperText","showError","rest","isError","TextField","style","marginTop","marginBottom","inputProps","SAVE_FORM_VALUES","store","localStorage","getItem","parse","JSON","userForm","hasOwnProperty","useStyles","makeStyles","root","borderRadius","padding","textTransform","margin","CustomButton","classes","className","children","StepperEnum","StepperButtons","disabled","Grid","item","validate","values","errors","direction","undefined","twist","RifleStep","dispatch","useDispatch","history","useHistory","formValues","useSelector","state","onSubmit","payload","push","initialValues","render","handleSubmit","noValidate","autoComplete","container","alignItems","spacing","label","placeholder","component","valid","StepItem","title","description","content","Box","flexGrow","Typography","display","flexDirection","paddingTop","AmmunitionStep","OpticsStep","getStepContent","stepIndex","StepperView","id","useParams","activeStep","Number","Object","keys","indexOf","NEXT_STEP","PREVIOUS_STEP","SAVE_TABLE_VALUES","table","combineReducers","action","assign","stepper","getRandomInt","max","Math","floor","random","TableView","tableValues","Table","TableHead","TableRow","TableCell","TableBody","map","row","scope","distance","min","mid","horizont","onClick","createData","addItem","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","App","subscribe","setItem","stringify","getState","height","boxSizing","p","xs","sm","md","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","defaultTheme","createMuiTheme","typography","fontFamily","palette","background","default","text","primary","secondary","main","contrastText","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","StrictMode","theme","CssBaseline","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a0b9470f.chunk.js","sourcesContent":["import {Button} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\n\nexport function Intro() {\n    return (\n        <Link to=\"stepper/rifle\">\n            <Button variant=\"contained\" color=\"primary\">\n                Hello World\n            </Button>\n        </Link>\n    )\n}\n","import {FieldMetaState, useField} from \"react-final-form\";\nimport {FormHelperText, FormHelperTextProps} from \"@material-ui/core\";\n\nexport interface ErrorMessageProps {\n    showError: boolean;\n    meta: FieldMetaState<any>;\n    formHelperTextProps?: Partial<FormHelperTextProps>;\n    helperText?: string;\n}\n\nexport function ErrorMessage({showError, meta, formHelperTextProps, helperText}: ErrorMessageProps) {\n    if (showError) {\n        return <FormHelperText {...formHelperTextProps}>{meta.error || meta.submitError}</FormHelperText>;\n    } else if (!!helperText) {\n        return <FormHelperText {...formHelperTextProps}>{helperText}</FormHelperText>;\n    } else {\n        return <></>;\n    }\n}\n\nexport type ShowErrorFunc = (props: ShowErrorProps) => boolean;\n\nexport interface ShowErrorProps {\n    meta: FieldMetaState<any>;\n}\n\nconst config = {\n    subscription: {\n        error: true,\n        submitError: true,\n        dirtySinceLastSubmit: true,\n        touched: true,\n        modified: true,\n    },\n};\n\nexport const useFieldForErrors = (name: string) => useField(name, config);\n\nexport const showErrorOnChange: ShowErrorFunc = (\n    {\n        meta: {\n            submitError,\n            dirtySinceLastSubmit,\n            error,\n            touched,\n            modified\n        },\n    }: ShowErrorProps) => !!(((submitError && !dirtySinceLastSubmit) || error) && (touched || modified));\n\nexport const showErrorOnBlur: ShowErrorFunc = (\n    {\n        meta: {submitError, dirtySinceLastSubmit, error, touched},\n    }: ShowErrorProps) => !!(((submitError && !dirtySinceLastSubmit) || error) && touched);\n","import {TextField, TextFieldProps} from \"@material-ui/core\";\nimport {showErrorOnChange} from \"./utils\";\nimport {FieldRenderProps} from \"react-final-form\";\n\ntype TextWrapperProps = FieldRenderProps<TextFieldProps, HTMLElement>;\nexport const MightInput = (props: TextWrapperProps) => {\n    const {\n        input: {name, value, type, onChange, ...restInput},\n        meta,\n        color,\n        required,\n        fullWidth = true,\n        helperText,\n        showError = showErrorOnChange,\n        ...rest\n    } = props;\n\n    const {error, submitError} = meta;\n    const isError = showError({meta});\n    return (\n        <TextField\n            style={{marginTop: 8, marginBottom: 8}}\n            fullWidth={fullWidth}\n            helperText={isError ? error || submitError : helperText}\n            error={isError}\n            color={color}\n            onChange={onChange}\n            name={name}\n            value={value}\n            type={type}\n            required={required}\n            inputProps={{required, ...restInput}}\n            {...rest}\n        />\n    )\n}\n","export const SAVE_FORM_VALUES = 'SAVE_FORM_VALUES';\nexport interface IAction {\n    type: string;\n    payload: string\n}\n\nconst store = localStorage.getItem('store')\nconst parse = store ? JSON.parse(store) : {};\nconst userForm = parse.hasOwnProperty(\"userForm\") ? parse[\"userForm\"] : {};\n\nexport function userFormReducer(state = userForm, action: IAction) {\n    switch (action.type) {\n        case SAVE_FORM_VALUES:\n            return Object.assign(state,action.payload);\n        default:\n            return state\n    }\n}\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n    root: {\n        borderRadius: 8,\n        padding: '10px 2rem',\n        textTransform: \"capitalize\",\n        margin: '.5rem'\n    },\n});\n\nexport default function CustomButton(props: any) {\n    const classes = useStyles();\n    return <Button {...props} className={classes.root}>{props.children}</Button>;\n}\n","import Button from \"@material-ui/core/Button\";\nimport CustomButton from \"../../../components/atoms/Button\";\nimport {Grid} from \"@material-ui/core\";\n\nexport const StepperButtons = ({disabled = false}) => {\n    return (\n        <div className=\"step__buttons\">\n            <Grid item style={{marginTop: 16}}>\n                <Button\n                    className=\"step__button\"\n                    // disabled={props.activeStep === 0}\n                    // onClick={props.handleBack}\n                >\n                    Відмінити\n                </Button>\n                <CustomButton\n                    className=\"step__button\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={!disabled}\n                >\n                    Ввести\n                </CustomButton>\n            </Grid>\n        </div>\n    )\n}\n","export enum StepperEnum {\n    'rifle',\n    'charge',\n    'optics',\n    'weather',\n    'goal',\n    'amendments'\n}\n","import {Grid} from \"@material-ui/core\";\nimport {Form, Field} from 'react-final-form'\nimport {MightInput} from \"../../../components/atoms/MightInput\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {IAction, SAVE_FORM_VALUES} from \"../../../store/reducer/formReducer\";\nimport {StepperButtons} from \"../stepperButtons/StepperButtons\";\nimport { useHistory } from \"react-router-dom\";\nimport {IState} from \"../../../store/state\";\n\nconst validate = (values: { direction: string; twist: string; }) => {\n    const errors: { direction: string | undefined, twist: string | undefined } = {\n        direction: undefined,\n        twist: undefined\n    };\n    if (!values.direction) {\n        errors.direction = 'Required';\n    }\n    if (!values.twist) {\n        errors.twist = 'Required';\n    }\n    return errors;\n};\n\nexport const RifleStep = () => {\n    const dispatch = useDispatch()\n    const history = useHistory();\n\n    const onSubmit = (values: any) => {\n        dispatch<IAction>({type: SAVE_FORM_VALUES, payload: values})\n        history.push(`/stepper/charge`)\n    }\n\n    const formValues:any = useSelector((state: IState) => state.userForm);\n\n    return (\n        <Form\n            onSubmit={onSubmit}\n            validate={validate}\n            initialValues={formValues}\n            render={props => (\n                <form onSubmit={props.handleSubmit} noValidate autoComplete=\"off\">\n                    <Grid container alignItems=\"flex-start\" spacing={0}>\n                        <Field\n                            name=\"twist\"\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            label=\"Twist\"\n                            placeholder=\"\"\n                            required\n                            component={MightInput}\n                        />\n\n                        <Field\n                            name=\"direction\"\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            component={MightInput}\n                            label=\"Direction\"\n                            placeholder=\"\"\n                        />\n                    </Grid>\n                    {/*<FormControl component=\"fieldset\">*/}\n                    {/*    <FormLabel component=\"legend\">Нарізки:</FormLabel>*/}\n                    {/*    <RadioGroup name=\"direction\" value={value} onChange={handleChange}>*/}\n                    {/*        <FormControlLabel value=\"left\" control={<Radio/>} label=\"Ліві\"/>*/}\n                    {/*        <FormControlLabel value=\"right\" control={<Radio/>} label=\"Праві\"/>*/}\n                    {/*    </RadioGroup>*/}\n                    {/*</FormControl>*/}\n\n                    {/*<FormControl>*/}\n                    {/*    <TextField*/}\n                    {/*        id=\"twist\"*/}\n                    {/*        label=\"Outlined secondary\"*/}\n                    {/*        variant=\"outlined\"*/}\n                    {/*        color=\"secondary\"*/}\n                    {/*    />*/}\n                    {/*</FormControl>*/}\n                    <StepperButtons disabled={props.valid}/>\n                </form>\n            )}\n        />\n    )\n}\n","import './StepItem.scss'\nimport React from \"react\";\nimport {Box, Typography} from \"@material-ui/core\";\nimport {StepContent} from \"../../../models/step.model\";\n\nexport function StepItem({title, description, content}: StepContent) {\n\n    return (\n        <div className=\"step\">\n            <Box flexGrow='1'>\n                <Typography variant='h4'>{title}</Typography>\n            </Box>\n            <Typography color=\"textSecondary\">{description}</Typography>\n            <Box\n                display=\"flex\"\n                flexDirection=\"column\"\n                paddingTop=\"2rem\"\n            >\n                {content}\n            </Box>\n        </div>\n    )\n}\n","\nimport {Field, Form} from 'react-final-form'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {IAction, SAVE_FORM_VALUES} from \"../../../store/reducer/formReducer\";\nimport {StepperButtons} from \"../stepperButtons/StepperButtons\";\nimport {MightInput} from \"../../../components/atoms/MightInput\";\nimport {useHistory} from \"react-router-dom\";\nimport {IState} from \"../../../store/state\";\n\nexport function AmmunitionStep() {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const onSubmit = (values: any) => {\n        dispatch<IAction>({type: SAVE_FORM_VALUES, payload: values})\n        history.push(`/stepper/optics`)\n    }\n\n    const formValues: any = useSelector((state: IState) => state.userForm);\n    return (\n        <Form\n            onSubmit={onSubmit}\n            initialValues={formValues}\n            render={props => (\n                <form onSubmit={props.handleSubmit} noValidate autoComplete=\"off\">\n                    <Field\n                        name=\"length\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        label=\"Довжина:\"\n                        placeholder=\"180\"\n                        component={MightInput}\n                    />\n\n                    <Field\n                        name=\"speed\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        component={MightInput}\n                        label=\"Швидкість:\"\n                        placeholder=\"800\"\n                    />\n\n                    <Field\n                        name=\"weight\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        component={MightInput}\n                        label=\"Вага:\"\n                        placeholder=\"\"\n                    />\n\n                    <Field\n                        name=\"caliber\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        component={MightInput}\n                        label=\"Калібр:\"\n                        placeholder=\"7.62x39\"\n                    />\n\n                    <Field\n                        name=\"ballistics\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        component={MightInput}\n                        label=\"Балістичний коефіціент:\"\n                        placeholder=\"7.62x39\"\n                    />\n                    <StepperButtons disabled={props.valid}/>\n                </form>\n            )}/>\n    )\n}\n","import {Field, Form} from 'react-final-form'\nimport {StepperButtons} from \"../stepperButtons/StepperButtons\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useHistory} from \"react-router-dom\";\nimport {IAction, SAVE_FORM_VALUES} from \"../../../store/reducer/formReducer\";\nimport {IState} from \"../../../store/state\";\nimport {MightInput} from \"../../../components/atoms/MightInput\";\n\nexport function OpticsStep() {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const onSubmit = (values: any) => {\n        dispatch<IAction>({type: SAVE_FORM_VALUES, payload: values})\n        history.push(`/table`)\n    }\n\n    const formValues: any = useSelector((state: IState) => state.userForm);\n    return (\n        <Form\n            onSubmit={onSubmit}\n            initialValues={formValues}\n            render={props => (\n                <form onSubmit={props.handleSubmit} noValidate autoComplete=\"off\">\n                    <Field\n                        name=\"distance\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        label=\"Дистанція пристрілки:\"\n                        placeholder=\"метрів\"\n                        component={MightInput}\n                    />\n\n                    <Field\n                        name=\"height_above_thunk\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        label=\"Висота прицілу над стволом:\"\n                        placeholder=\"мм\"\n                        component={MightInput}\n                    />\n\n                    <Field\n                        name=\"vertical_step\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        label=\"Вертикальний крок:\"\n                        placeholder=\"грейн\"\n                        component={MightInput}\n                    />\n\n                    <Field\n                        name=\"horizontal_step\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        label=\"Горизонтальний крок:\"\n                        component={MightInput}\n                    />\n\n                    <StepperButtons disabled={props.valid}/>\n                </form>\n            )}/>\n    )\n}\n","import React from 'react';\nimport {RifleStep} from \"./steps/Rifle\";\nimport {StepItem} from \"./stepItem/StepItem\";\nimport {useParams} from \"react-router-dom\";\nimport {StepperEnum} from \"../../models/stepper.enum\";\nimport {AmmunitionStep} from \"./steps/Ammunition\";\nimport {OpticsStep} from \"./steps/Optics\";\n\n\nfunction getStepContent(stepIndex: number) {\n    switch (stepIndex) {\n        case 0:\n            return {\n                title: \"Гвинтівка\",\n                description: \"Додайте опис гвинтівки для коректного використання калькулятора.\",\n                content: <RifleStep/>\n            };\n        case 1:\n            return {\n                title: \"Набій\",\n                description: \"Параметри кулі необхідні для корегування роботи калькулятора та врахування балістичного коефіціенту.\",\n                content: <AmmunitionStep/>\n            };\n        case 2:\n            return {\n                title: \"Налаштування оптики\",\n                description: \"Введення налаштувань для оптичного прицілу для коректного відображення параметрів введення в коректних одиницях.\",\n                content: <OpticsStep/>\n            };\n        // case 2:\n        //     return <OpticsStep/>;\n        // case 3:\n        //     return <WeatherStep/>;\n        // case 4:\n        //     return <GoalStep/>;\n        default:\n            return {\n                title: \"\",\n                description: \"\",\n                content: null\n            };\n    }\n}\n\nexport default function StepperView() {\n    let {id} = useParams<{ id: string }>();\n    const activeStep: number = Number(Object.keys(StepperEnum)[Object.values(StepperEnum).indexOf(id)]);\n\n    return (\n        <StepItem\n            title={getStepContent(activeStep).title}\n            description={getStepContent(activeStep).description}\n            content={getStepContent(activeStep).content}\n        />\n    )\n}\n","export const NEXT_STEP = 'NEXT_STEP';\nexport const PREVIOUS_STEP = 'PREVIOUS_STEP';\n\nexport interface IStepperAction {\n    type: string;\n    payload?: string\n}\n\n\nexport function stepperReducer(state = 0, action: IStepperAction) {\n    switch (action.type) {\n        case NEXT_STEP:\n            return ++state;\n        case  PREVIOUS_STEP:\n            return --state;\n        default:\n            return state\n    }\n}\n","export const SAVE_TABLE_VALUES = 'SAVE_TABLE_VALUES';\n\nexport interface ITableAction {\n    type: string;\n    payload: any\n}\n\nconst store = localStorage.getItem('store');\nconst parse = store ? JSON.parse(store) : [];\n\nconst table = parse.hasOwnProperty(\"table\") ? parse[\"table\"] : [];\n\nexport function tableReducer(state = table, action: ITableAction) {\n    switch (action.type) {\n        case SAVE_TABLE_VALUES:\n            return [...state, action.payload];\n        default:\n            return state\n    }\n}\n","import {userFormReducer} from './formReducer';\nimport {combineReducers} from \"redux\";\nimport {stepperReducer} from \"./stepper\";\nimport {tableReducer} from \"./tableReducer\";\n\nexport default combineReducers({\n    userForm: userFormReducer,\n    stepper: stepperReducer,\n    table: tableReducer,\n});\n","import {Box, Table, TableBody, TableCell, TableHead, TableRow, Typography} from \"@material-ui/core\";\nimport React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {TableModel} from \"../../models/table.model\";\nimport {IState} from \"../../store/state\";\nimport CustomButton from \"../../components/atoms/Button\";\nimport {ITableAction, SAVE_TABLE_VALUES} from \"../../store/reducer/tableReducer\";\n\nfunction createData(\n    distance: number,\n    min: number | string = \"-\",\n    mid: number | string = \"-\",\n    max: number | string = \"-\",\n    horizont: number | string = \"-\"\n): TableModel {\n    return {\n        distance,\n        min,\n        mid,\n        max,\n        horizont\n    };\n}\n\nfunction getRandomInt(max: number) {\n    return Math.floor(Math.random() * max);\n}\n\nexport const TableView = () => {\n\n    // const dispatch = useDispatch();\n    // dispatch<ITableAction>({type: SAVE_TABLE_VALUES, payload: rows})\n    const dispatch = useDispatch();\n    const addItem = () => {\n        const row = createData(getRandomInt(1000), getRandomInt(8), getRandomInt(10), getRandomInt(20), getRandomInt(50))\n        dispatch<ITableAction>({type: SAVE_TABLE_VALUES, payload: row})\n    }\n    const tableValues: TableModel[] = useSelector((state: IState) => state.table);\n\n    return (\n        <Box>\n            <Box flexGrow='1'>\n                <Typography variant='h4'>Таблиця</Typography>\n            </Box>\n            <Box padding={\"2rem 0\"}>\n                <Typography color=\"textSecondary\">Поправки для заданиих мішеней(моа).</Typography>\n            </Box>\n            <Box padding={\"2rem 0\"}>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Дист.</TableCell>\n                            <TableCell>Мін.</TableCell>\n                            <TableCell>Сер.</TableCell>\n                            <TableCell>Макс.</TableCell>\n                            <TableCell>Гориз.</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {tableValues.map((row: TableModel) => (\n                            <TableRow key={row.distance}>\n                                <TableCell component=\"th\" scope=\"row\">{row.distance}</TableCell>\n                                <TableCell>{row.min}</TableCell>\n                                <TableCell>{row.mid}</TableCell>\n                                <TableCell>{row.max}</TableCell>\n                                <TableCell>{row.horizont}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </Box>\n            <CustomButton\n                className=\"step__button\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => addItem()}\n            >\n                Додати ціль\n            </CustomButton>\n        </Box>\n    )\n}\n","import React from 'react';\nimport './App.scss';\nimport {\n    // BrowserRouter as Router, solution for GH-Pages\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport {HashRouter as Router} from 'react-router-dom'\nimport {Intro} from \"./views/Intro/Intro\";\nimport StepperView from \"./views/stepper/Stepper\";\nimport {Box} from \"@material-ui/core\";\nimport {Provider} from \"react-redux\";\nimport {applyMiddleware, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport reducers from './store/reducer';\nimport {TableView} from \"./views/table/Table\";\n\nconst store = createStore(\n    reducers,\n    composeWithDevTools(\n        applyMiddleware(thunk),\n    ),\n);\n\nfunction App() {\n    store.subscribe(() => {\n        localStorage.setItem('store', JSON.stringify(store.getState()));\n    });\n\n    return (\n        <Provider store={store}>\n            <Box\n                display=\"flex\"\n                height='100%'\n                boxSizing='border-box'\n                padding={2}\n                p={{xs: 2, sm: 3, md: 4}}\n            >\n                <Router>\n                    <Box\n                        className=\"wrapper\"\n                    >\n                        <Switch>\n                            <Route exact path=\"/\">\n                                <Intro/>\n                            </Route>\n                            <Route path=\"/stepper/:id\">\n                                <StepperView/>\n                            </Route>\n                            <Route path=\"/table\">\n                                <TableView/>\n                            </Route>\n                        </Switch>\n                    </Box>\n                </Router>\n            </Box>\n        </Provider>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createMuiTheme} from \"@material-ui/core/styles\";\n\nexport const defaultTheme = createMuiTheme({\n    typography: {\n        fontFamily: 'Open Sans',\n    },\n    palette: {\n        background: {\n            default: \"#2A2A3A\",\n        },\n        text: {\n            primary: 'rgba(255,255,255,1)',\n            secondary: 'rgba(255,255,255,.65)',\n        },\n        primary: {\n            main: '#2F80ED',\n            contrastText: '#fff'\n        },\n        secondary: {\n            main: '#81D3F9',\n        },\n        type: 'dark',\n    }\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {CssBaseline, MuiThemeProvider} from \"@material-ui/core\";\nimport {defaultTheme} from \"./theme\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <MuiThemeProvider theme={defaultTheme}>\n            <CssBaseline />\n            <App/>\n        </MuiThemeProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nserviceWorker.register()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}