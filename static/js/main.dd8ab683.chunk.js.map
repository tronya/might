{"version":3,"sources":["views/Intro/Intro.tsx","components/atoms/utils.tsx","components/atoms/MightInput.tsx","store/reducer/formReducer.ts","components/atoms/Button.tsx","views/stepper/stepperButtons/StepperButtons.tsx","models/stepper.enum.ts","components/atoms/MightRadioButton.tsx","views/stepper/steps/Rifle.tsx","views/stepper/stepItem/StepItem.tsx","components/atoms/MightSelectBox.tsx","views/stepper/steps/Ammunition.tsx","views/stepper/steps/Optics.tsx","views/stepper/Stepper.tsx","store/reducer/stepper.ts","store/reducer/tableReducer.ts","store/reducer/index.ts","views/table/Table.tsx","App.tsx","serviceWorkerRegistration.ts","theme.tsx","reportWebVitals.ts","index.tsx"],"names":["Intro","to","Button","variant","color","afterInjection","error","svg","console","log","beforeInjection","classList","add","setAttribute","className","evalScripts","fallback","loading","onClick","renumerateIRIElements","src","useRequestCache","wrapper","showErrorOnChange","meta","submitError","dirtySinceLastSubmit","touched","modified","MightInput","props","input","name","value","type","onChange","restInput","required","fullWidth","helperText","showError","rest","isError","TextField","style","marginTop","marginBottom","inputProps","SAVE_FORM_VALUES","store","localStorage","getItem","parse","JSON","userForm","hasOwnProperty","direction","useStyles","makeStyles","root","borderRadius","padding","textTransform","margin","CustomButton","classes","children","StepperEnum","StepperButtons","disabled","onDiscard","fallBackFunction","useHistory","Grid","item","goBack","MightRadioButton","defaultValue","label","options","FormControl","component","FormLabel","RadioGroup","map","FormControlLabel","control","Radio","validate","values","errors","undefined","twist","RifleStep","dispatch","useDispatch","history","formValues","useSelector","state","onSubmit","payload","push","initialValues","render","handleSubmit","noValidate","autoComplete","container","alignItems","spacing","placeholder","valid","StepItem","title","description","content","Box","flexGrow","Typography","display","flexDirection","paddingTop","theme","createStyles","formControl","minWidth","width","MightSelect","mergedValue","InputLabel","id","Select","displayEmpty","MenuItem","AmmunitionStep","OpticsStep","getStepContent","stepIndex","StepperView","useParams","activeStep","Number","Object","keys","indexOf","NEXT_STEP","PREVIOUS_STEP","SAVE_TABLE_VALUES","table","combineReducers","action","assign","stepper","getRandomInt","max","Math","floor","random","TableView","tableValues","Table","TableHead","TableRow","TableCell","TableBody","row","scope","distance","min","mid","horizont","createData","addItem","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","App","subscribe","setItem","stringify","getState","height","boxSizing","p","xs","sm","md","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","defaultTheme","createMuiTheme","typography","fontFamily","palette","background","default","text","primary","secondary","main","contrastText","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","CssBaseline","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.dd8ab683.chunk.js","sourcesContent":["import {Button} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport { ReactSVG } from 'react-svg'\n\nexport function Intro() {\n    return (\n        <>\n        <Link to=\"stepper/rifle\">\n            <Button variant=\"contained\" color=\"primary\">\n                Hello World\n            </Button>\n            dsf\n        </Link>\n        \n        \n        <ReactSVG\n  afterInjection={(error, svg) => {\n    if (error) {\n      console.error(error)\n      return\n    }\n    console.log(svg)\n  }}\n  beforeInjection={(svg) => {\n    svg.classList.add('svg-class-name')\n    svg.setAttribute('style', 'width: 200px')\n  }}\n  className=\"wrapper-class-name\"\n  evalScripts=\"always\"\n  fallback={() => <span>Error!</span>}\n  loading={() => <span>Loading</span>}\n  onClick={() => {\n    console.log('wrapper onClick')\n  }}\n  renumerateIRIElements={false}\n  src='./logo.svg'\n  useRequestCache={false}\n  wrapper=\"span\"\n/>\n\n\n        </>\n    )\n}\n","import {FieldMetaState, useField} from \"react-final-form\";\nimport {FormHelperText, FormHelperTextProps} from \"@material-ui/core\";\n\nexport interface ErrorMessageProps {\n    showError: boolean;\n    meta: FieldMetaState<any>;\n    formHelperTextProps?: Partial<FormHelperTextProps>;\n    helperText?: string;\n}\n\nexport function ErrorMessage({showError, meta, formHelperTextProps, helperText}: ErrorMessageProps) {\n    if (showError) {\n        return <FormHelperText {...formHelperTextProps}>{meta.error || meta.submitError}</FormHelperText>;\n    } else if (!!helperText) {\n        return <FormHelperText {...formHelperTextProps}>{helperText}</FormHelperText>;\n    } else {\n        return <></>;\n    }\n}\n\nexport type ShowErrorFunc = (props: ShowErrorProps) => boolean;\n\nexport interface ShowErrorProps {\n    meta: FieldMetaState<any>;\n}\n\nconst config = {\n    subscription: {\n        error: true,\n        submitError: true,\n        dirtySinceLastSubmit: true,\n        touched: true,\n        modified: true,\n    },\n};\n\nexport const useFieldForErrors = (name: string) => useField(name, config);\n\nexport const showErrorOnChange: ShowErrorFunc = (\n    {\n        meta: {\n            submitError,\n            dirtySinceLastSubmit,\n            error,\n            touched,\n            modified\n        },\n    }: ShowErrorProps) => !!(((submitError && !dirtySinceLastSubmit) || error) && (touched || modified));\n\nexport const showErrorOnBlur: ShowErrorFunc = (\n    {\n        meta: {submitError, dirtySinceLastSubmit, error, touched},\n    }: ShowErrorProps) => !!(((submitError && !dirtySinceLastSubmit) || error) && touched);\n","import {TextField, TextFieldProps} from \"@material-ui/core\";\nimport {showErrorOnChange} from \"./utils\";\nimport {FieldRenderProps} from \"react-final-form\";\n\ntype TextWrapperProps = FieldRenderProps<TextFieldProps, HTMLElement>;\nexport const MightInput = (props: TextWrapperProps) => {\n    const {\n        input: {name, value, type, onChange, ...restInput},\n        meta,\n        color,\n        required,\n        fullWidth = true,\n        helperText,\n        showError = showErrorOnChange,\n        ...rest\n    } = props;\n\n    const {error, submitError} = meta;\n    const isError = showError({meta});\n    return (\n        <TextField\n            style={{marginTop: 8, marginBottom: 8}}\n            fullWidth={fullWidth}\n            helperText={isError ? error || submitError : helperText}\n            error={isError}\n            color={color}\n            onChange={onChange}\n            name={name}\n            value={value}\n            type={type}\n            required={required}\n            inputProps={{required, ...restInput}}\n            {...rest}\n        />\n    )\n}\n","export const SAVE_FORM_VALUES = 'SAVE_FORM_VALUES';\n\nexport interface IAction {\n    type: string;\n    payload: string\n}\n\nconst store = localStorage.getItem('store')\nconst parse = store ? JSON.parse(store) : {};\nconst userForm = parse.hasOwnProperty(\"userForm\") ? parse[\"userForm\"] : {\n    direction: 'left'\n};\n\nexport function userFormReducer(state = userForm, action: IAction) {\n    switch (action.type) {\n        case SAVE_FORM_VALUES:\n            return Object.assign(state, action.payload);\n        default:\n            return state\n    }\n}\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n    root: {\n        borderRadius: 8,\n        padding: '10px 2rem',\n        textTransform: \"capitalize\",\n        margin: '.5rem'\n    },\n});\n\nexport default function CustomButton(props: any) {\n    const classes = useStyles();\n    return <Button {...props} className={classes.root}>{props.children}</Button>;\n}\n","import Button from \"@material-ui/core/Button\";\nimport CustomButton from \"../../../components/atoms/Button\";\nimport {Grid} from \"@material-ui/core\";\nimport {useHistory} from \"react-router-dom\";\n\nexport const StepperButtons = ({disabled = false, onDiscard}: { disabled: boolean; onDiscard?: any }) => {\n    const fallBackFunction = useHistory();\n    const goBackFunction = () =>  onDiscard || fallBackFunction.goBack();\n    return (\n        <div className=\"step__buttons\">\n            <Grid item style={{marginTop: 16}}>\n                <Button\n                    className=\"step__button\"\n                    onClick={goBackFunction}\n                >\n                    Відмінити\n                </Button>\n                <CustomButton\n                    className=\"step__button\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={!disabled}\n                >\n                    Ввести\n                </CustomButton>\n            </Grid>\n        </div>\n    )\n}\n","export enum StepperEnum {\n    'rifle',\n    'charge',\n    'optics',\n    'weather',\n    'goal',\n    'amendments'\n}\n","import {\n    FormControl,\n    FormControlLabel,\n    FormLabel,\n    Radio,\n    RadioGroup, RadioGroupProps,\n} from \"@material-ui/core\";\nimport {showErrorOnChange} from \"./utils\";\nimport {FieldRenderProps} from \"react-final-form\";\n\ntype RadioGroupWrapperProps = FieldRenderProps<RadioGroupProps, HTMLElement>;\nexport const MightRadioButton = (props: RadioGroupWrapperProps) => {\n    console.log(props);\n    const {\n        input: {name, value, onChange},\n        meta,\n        color,\n        required,\n        fullWidth = true,\n        helperText,\n        defaultValue,\n        showError = showErrorOnChange,\n        label,\n        options,\n        ...rest\n    } = props;\n\n    const isError = showError({meta});\n    return (\n        <FormControl\n            component=\"fieldset\"\n            fullWidth={fullWidth}\n            style={{marginTop: 8, marginBottom: 8}}>\n            <FormLabel component=\"legend\">{label}</FormLabel>\n            {isError}\n            <RadioGroup\n                name={name}\n                defaultValue={defaultValue}\n                value={value}\n                onChange={onChange}\n                {...rest}>\n                {\n                    options.map(\n                        ({label, value}: { label: string; value: string }) =>\n                            <FormControlLabel\n                                key={label}\n                                value={value}\n                                control={<Radio/>}\n                                label={label}\n                            />\n                    )\n                }\n            </RadioGroup>\n        </FormControl>\n    )\n}\n","import {Grid} from \"@material-ui/core\";\nimport {Form, Field} from 'react-final-form'\nimport {MightInput} from \"../../../components/atoms/MightInput\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {IAction, SAVE_FORM_VALUES} from \"../../../store/reducer/formReducer\";\nimport {StepperButtons} from \"../stepperButtons/StepperButtons\";\nimport {useHistory} from \"react-router-dom\";\nimport {IState} from \"../../../store/state\";\nimport {MightRadioButton} from \"../../../components/atoms/MightRadioButton\";\n\nconst validate = (values: { direction: string; twist: string; }) => {\n    const errors: { direction: string | undefined, twist: string | undefined } = {\n        direction: undefined,\n        twist: undefined\n    };\n    if (!values.direction) {\n        errors.direction = 'Required';\n    }\n    if (!values.twist) {\n        errors.twist = 'Required';\n    }\n    return errors;\n};\n\nexport const RifleStep = () => {\n    const dispatch = useDispatch()\n    const history = useHistory();\n\n    const onSubmit = (values: any) => {\n        dispatch<IAction>({type: SAVE_FORM_VALUES, payload: values})\n        history.push(`/stepper/charge`)\n    }\n\n    const formValues: any = useSelector((state: IState) => state.userForm);\n\n    return (\n        <Form\n            onSubmit={onSubmit}\n            validate={validate}\n            initialValues={formValues}\n            render={props => (\n                <form onSubmit={props.handleSubmit} noValidate autoComplete=\"off\">\n                    <Grid container alignItems=\"flex-start\" spacing={0}>\n                        <Field\n                            name=\"direction\"\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            component={MightRadioButton}\n                            label=\"Нарізи:\"\n                            placeholder=\"\"\n                            options={[\n                                {label: 'Ліво', value: 'left'},\n                                {label: 'Право', value: 'right'},\n                            ]}\n                        />\n                    </Grid>\n                    <Field\n                        name=\"twist\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        label=\"Твіст\"\n                        placeholder=\"\"\n                        required\n                        component={MightInput}\n                    />\n                    <StepperButtons disabled={props.valid}/>\n                </form>\n            )}\n        />\n    )\n}\n","import './StepItem.scss'\nimport React from \"react\";\nimport {Box, Typography} from \"@material-ui/core\";\nimport {StepContent} from \"../../../models/step.model\";\n\nexport function StepItem({title, description, content}: StepContent) {\n\n    return (\n        <div className=\"step\">\n            <Box flexGrow='1'>\n                <Typography variant='h4'>{title}</Typography>\n            </Box>\n            <Typography color=\"textSecondary\">{description}</Typography>\n            <Box\n                display=\"flex\"\n                flexDirection=\"column\"\n                paddingTop=\"2rem\"\n            >\n                {content}\n            </Box>\n        </div>\n    )\n}\n","import {createStyles, FormControl, InputLabel, makeStyles, MenuItem, Select, Theme} from \"@material-ui/core\";\nimport {showErrorOnChange} from \"./utils\";\nimport {FieldRenderProps} from \"react-final-form\";\n\ninterface IOptions {\n    label: string;\n    value: string\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\ncreateStyles({\n  formControl: {\n    minWidth: 120,\n    width:`100%`,\n    marginTop: 8,\n    marginBottom: 8\n  },\n}),\n);\n\ntype SelectProps = FieldRenderProps<SelectProps, HTMLElement>;\nexport const MightSelect = (props: SelectProps) => {\n    const {\n        input: {name, value, onChange},\n        meta,\n        color,\n        required,\n        helperText,\n        label,\n        defaultValue = {label, value: \"\"},\n        showError = showErrorOnChange,\n        options = [],\n        ...rest\n    } = props;\n\n\n    const classes = useStyles();\n\n    const mergedValue: IOptions[] = [defaultValue, ...options]\n\n    const isError = showError({meta});\n    return (\n    <FormControl \n        variant=\"outlined\"\n        className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-outlined-label\">{label}</InputLabel>\n        <Select\n                name={name}\n                value={value}\n                displayEmpty\n                onChange={onChange}\n                required={required}\n                label={label}\n                {...rest}>\n                {\n                    mergedValue.map(\n                        ({label, value}: { label: string; value: string }) =>\n                            <MenuItem key={label} value={value}>{label}</MenuItem>\n                    )\n                }\n            </Select>\n            {isError}\n        </FormControl>\n    )\n}\n","import {Field, Form} from 'react-final-form'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {IAction, SAVE_FORM_VALUES} from \"../../../store/reducer/formReducer\";\nimport {StepperButtons} from \"../stepperButtons/StepperButtons\";\nimport {MightInput} from \"../../../components/atoms/MightInput\";\nimport {useHistory} from \"react-router-dom\";\nimport {IState} from \"../../../store/state\";\nimport {MightSelect} from \"../../../components/atoms/MightSelectBox\";\n\nexport function AmmunitionStep() {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const onSubmit = (values: any) => {\n        dispatch<IAction>({type: SAVE_FORM_VALUES, payload: values})\n        history.push(`/stepper/optics`)\n    }\n\n    const formValues: any = useSelector((state: IState) => state.userForm);\n    return (\n        <Form\n            onSubmit={onSubmit}\n            initialValues={formValues}\n            render={props => (\n                <form onSubmit={props.handleSubmit} noValidate autoComplete=\"off\">\n                    <Field\n                        name=\"length\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        label=\"Довжина:\"\n                        placeholder=\"180\"\n                        component={MightInput}\n                    />\n\n                    <Field\n                        name=\"speed\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        component={MightInput}\n                        label=\"Швидкість:\"\n                        placeholder=\"800\"\n                    />\n\n                    <Field\n                        name=\"weight\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        component={MightInput}\n                        label=\"Вага:\"\n                        placeholder=\"\"\n                    />\n\n                    <Field\n                        name=\"caliber\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        component={MightSelect}\n                        label=\"Калібр:\"\n                        options={[\n                            {value: '308', label: '.308'},\n                            {value: '221', label: '.22lr'},\n                            {value: '223', label: '.223 rem'},\n                            {value: '7.62', label: '7,62x39mm'},\n                        ]}\n                    />\n\n                    <Field\n                        name=\"ballistics\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        component={MightInput}\n                        label=\"Балістичний коефіціент:\"\n                        placeholder=\"7.62x39\"\n                    />\n                    <StepperButtons disabled={props.valid}/>\n                </form>\n            )}/>\n    )\n}\n","import {Field, Form} from 'react-final-form'\nimport {StepperButtons} from \"../stepperButtons/StepperButtons\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useHistory} from \"react-router-dom\";\nimport {IAction, SAVE_FORM_VALUES} from \"../../../store/reducer/formReducer\";\nimport {IState} from \"../../../store/state\";\nimport {MightInput} from \"../../../components/atoms/MightInput\";\nimport {MightSelect} from \"../../../components/atoms/MightSelectBox\";\n\nexport function OpticsStep() {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const onSubmit = (values: any) => {\n        dispatch<IAction>({type: SAVE_FORM_VALUES, payload: values})\n        history.push(`/table`)\n    }\n\n    const formValues: any = useSelector((state: IState) => state.userForm);\n    return (\n        <Form\n            onSubmit={onSubmit}\n            initialValues={formValues}\n            render={props => (\n                <form onSubmit={props.handleSubmit} noValidate autoComplete=\"off\">\n                    <Field\n                        name=\"distance\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        label=\"Дистанція пристрілки:\"\n                        placeholder=\"метрів\"\n                        component={MightInput}\n                    />\n\n                    <Field\n                        name=\"height_above_thunk\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        label=\"Висота прицілу над стволом:\"\n                        placeholder=\"см\"\n                        component={MightInput}\n                    />\n\n                    <Field\n                        name=\"vertical_step\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        label=\"Вертикальний крок:\"\n                        component={MightSelect}\n                        required\n                        options={[\n                            {value: 'mil', label: 'mil'},\n                            {value: 'moa', label: 'moa'},\n                        ]}\n                    />\n\n                    <Field\n                        name=\"horizontal_step\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        label=\"Горизонтальний крок:\"\n                        component={MightSelect}\n                        required\n                        options={[\n                            {value: 'mil', label: 'mil'},\n                            {value: 'moa', label: 'moa'},\n                        ]}\n                    />\n\n                    <StepperButtons disabled={props.valid}/>\n                </form>\n            )}/>\n    )\n}\n","import React from 'react';\nimport {RifleStep} from \"./steps/Rifle\";\nimport {StepItem} from \"./stepItem/StepItem\";\nimport {useParams} from \"react-router-dom\";\nimport {StepperEnum} from \"../../models/stepper.enum\";\nimport {AmmunitionStep} from \"./steps/Ammunition\";\nimport {OpticsStep} from \"./steps/Optics\";\n\n\nfunction getStepContent(stepIndex: number) {\n    switch (stepIndex) {\n        case 0:\n            return {\n                title: \"Гвинтівка\",\n                description: \"Додайте опис гвинтівки для коректного використання калькулятора.\",\n                content: <RifleStep/>\n            };\n        case 1:\n            return {\n                title: \"Набій\",\n                description: \"Параметри кулі необхідні для корегування роботи калькулятора та врахування балістичного коефіціенту.\",\n                content: <AmmunitionStep/>\n            };\n        case 2:\n            return {\n                title: \"Налаштування оптики\",\n                description: \"Введення налаштувань для оптичного прицілу для коректного відображення параметрів введення в коректних одиницях.\",\n                content: <OpticsStep/>\n            };\n        // case 2:\n        //     return <OpticsStep/>;\n        // case 3:\n        //     return <WeatherStep/>;\n        // case 4:\n        //     return <GoalStep/>;\n        default:\n            return {\n                title: \"\",\n                description: \"\",\n                content: null\n            };\n    }\n}\n\nexport default function StepperView() {\n    let {id} = useParams<{ id: string }>();\n    const activeStep: number = Number(Object.keys(StepperEnum)[Object.values(StepperEnum).indexOf(id)]);\n\n    return (\n        <StepItem\n            title={getStepContent(activeStep).title}\n            description={getStepContent(activeStep).description}\n            content={getStepContent(activeStep).content}\n        />\n    )\n}\n","export const NEXT_STEP = 'NEXT_STEP';\nexport const PREVIOUS_STEP = 'PREVIOUS_STEP';\n\nexport interface IStepperAction {\n    type: string;\n    payload?: string\n}\n\n\nexport function stepperReducer(state = 0, action: IStepperAction) {\n    switch (action.type) {\n        case NEXT_STEP:\n            return ++state;\n        case  PREVIOUS_STEP:\n            return --state;\n        default:\n            return state\n    }\n}\n","export const SAVE_TABLE_VALUES = 'SAVE_TABLE_VALUES';\n\nexport interface ITableAction {\n    type: string;\n    payload: any\n}\n\nconst store = localStorage.getItem('store');\nconst parse = store ? JSON.parse(store) : [];\n\nconst table = parse.hasOwnProperty(\"table\") ? parse[\"table\"] : [];\n\nexport function tableReducer(state = table, action: ITableAction) {\n    switch (action.type) {\n        case SAVE_TABLE_VALUES:\n            return [...state, action.payload];\n        default:\n            return state\n    }\n}\n","import {userFormReducer} from './formReducer';\nimport {combineReducers} from \"redux\";\nimport {stepperReducer} from \"./stepper\";\nimport {tableReducer} from \"./tableReducer\";\n\nexport default combineReducers({\n    userForm: userFormReducer,\n    stepper: stepperReducer,\n    table: tableReducer,\n});\n","import {Box, Table, TableBody, TableCell, TableHead, TableRow, Typography} from \"@material-ui/core\";\nimport React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {TableModel} from \"../../models/table.model\";\nimport {IState} from \"../../store/state\";\nimport CustomButton from \"../../components/atoms/Button\";\nimport {ITableAction, SAVE_TABLE_VALUES} from \"../../store/reducer/tableReducer\";\n\nfunction createData(\n    distance: number,\n    min: number | string = \"-\",\n    mid: number | string = \"-\",\n    max: number | string = \"-\",\n    horizont: number | string = \"-\"\n): TableModel {\n    return {\n        distance,\n        min,\n        mid,\n        max,\n        horizont\n    };\n}\n\nfunction getRandomInt(max: number) {\n    return Math.floor(Math.random() * max);\n}\n\nexport const TableView = () => {\n\n    // const dispatch = useDispatch();\n    // dispatch<ITableAction>({type: SAVE_TABLE_VALUES, payload: rows})\n    const dispatch = useDispatch();\n    const addItem = () => {\n        const row = createData(getRandomInt(1000), getRandomInt(8), getRandomInt(10), getRandomInt(20), getRandomInt(50))\n        dispatch<ITableAction>({type: SAVE_TABLE_VALUES, payload: row})\n    }\n    const tableValues: TableModel[] = useSelector((state: IState) => state.table);\n\n    return (\n        <Box>\n            <Box flexGrow='1'>\n                <Typography variant='h4'>Таблиця</Typography>\n            </Box>\n            <Box padding={\"2rem 0\"}>\n                <Typography color=\"textSecondary\">Поправки для заданиих мішеней(моа).</Typography>\n            </Box>\n            <Box padding={\"2rem 0\"}>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Дист.</TableCell>\n                            <TableCell>Мін.</TableCell>\n                            <TableCell>Сер.</TableCell>\n                            <TableCell>Макс.</TableCell>\n                            <TableCell>Гориз.</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {tableValues.map((row: TableModel) => (\n                            <TableRow key={row.distance}>\n                                <TableCell component=\"th\" scope=\"row\">{row.distance}</TableCell>\n                                <TableCell>{row.min}</TableCell>\n                                <TableCell>{row.mid}</TableCell>\n                                <TableCell>{row.max}</TableCell>\n                                <TableCell>{row.horizont}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </Box>\n            <CustomButton\n                className=\"step__button\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => addItem()}\n            >\n                Додати ціль\n            </CustomButton>\n        </Box>\n    )\n}\n","import React from 'react';\nimport './App.scss';\nimport {\n    // BrowserRouter as Router, solution for GH-Pages\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport {HashRouter as Router} from 'react-router-dom'\nimport {Intro} from \"./views/Intro/Intro\";\nimport StepperView from \"./views/stepper/Stepper\";\nimport {Box} from \"@material-ui/core\";\nimport {Provider} from \"react-redux\";\nimport {applyMiddleware, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport reducers from './store/reducer';\nimport {TableView} from \"./views/table/Table\";\n\nconst store = createStore(\n    reducers,\n    composeWithDevTools(\n        applyMiddleware(thunk),\n    ),\n);\n\nfunction App() {\n    store.subscribe(() => {\n        localStorage.setItem('store', JSON.stringify(store.getState()));\n    });\n\n    return (\n        <Provider store={store}>\n            <Box\n                display=\"flex\"\n                height='100%'\n                boxSizing='border-box'\n                padding={2}\n                p={{xs: 2, sm: 3, md: 4}}\n            >\n                <Router>\n                    <Box\n                        className=\"wrapper\"\n                    >\n                        <Switch>\n                            <Route exact path=\"/\">\n                                <Intro/>\n                            </Route>\n                            <Route path=\"/stepper/:id\">\n                                <StepperView/>\n                            </Route>\n                            <Route path=\"/table\">\n                                <TableView/>\n                            </Route>\n                        </Switch>\n                    </Box>\n                </Router>\n            </Box>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createMuiTheme} from \"@material-ui/core/styles\";\n\nexport const defaultTheme = createMuiTheme({\n    typography: {\n        fontFamily: 'Open Sans',\n    },\n    palette: {\n        background: {\n            default: \"#2A2A3A\",\n        },\n        text: {\n            primary: 'rgba(255,255,255,1)',\n            secondary: 'rgba(255,255,255,.65)',\n        },\n        primary: {\n            main: '#2F80ED',\n            contrastText: '#fff'\n        },\n        secondary: {\n            main: '#81D3F9',\n        },\n        type: 'dark',\n    }\n});\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport {CssBaseline, MuiThemeProvider} from \"@material-ui/core\";\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport {defaultTheme} from \"./theme\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <MuiThemeProvider theme={defaultTheme}>\n            <CssBaseline />\n            <App/>\n        </MuiThemeProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}